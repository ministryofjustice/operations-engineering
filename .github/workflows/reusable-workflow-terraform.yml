name: "♻️ Terraform Reusable Workflow"

on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      terraform_version:
        required: true
        type: string
      name:
        required: true
        type: string
      build_lambdas:
        required: false
        type: boolean
        default: false
      build_lambdas_command:
        required: false
        type: string
      lambda_module_name:
        required: false
        type: string
      aws_profile_name:
        required: false
        type: string
        default: ""
      workflow_name:
        type: string
        required: true
    secrets:
      aws_profile_arn:
        required: false
      iam_role:
        required: true
      repo_github_token:
        required: true
      slack_webhook_url:
        required: true
      env:
        required: false

env:
  TERRAFORM_VERSION: ${{ inputs.terraform_version }}

jobs:
  terraform:
    name: "Terraform ${{ inputs.path }}"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    defaults:
      run:
        working-directory: ${{ inputs.path }}
    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          while IFS='=' read -r key value; do
            if [ -n "$key" ]; then
              echo "$key=${value}" >> "$GITHUB_ENV"
              echo "::add-mask::${value}"
            fi
          done <<< "${{ secrets.env }}"

      - uses: ministryofjustice/github-actions/setup-aws-profile@v18.2.1
        if: ${{ inputs.aws_profile_name != '' }}
        with:
          role-arn: ${{ secrets.aws_profile_arn }}
          profile-name: ${{ inputs.aws_profile_name }}

      - uses: hashicorp/setup-terraform@a0b6ede12c06dbc21b9ea1f225a4121a2f203c69 # v3.1.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials for Terraform
        uses: aws-actions/configure-aws-credentials@486457dc46e82b9a740ca0ef1dac6a38a3fc272d # v4.0.2
        with:
          role-to-assume: ${{ secrets.iam_role }}
          aws-region: eu-west-2

      - name: Post Link to Apply Pipeline
        if: github.ref == 'refs/heads/main'
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          repo-token: ${{ secrets.repo_github_token }}
          repo-token-user-login: "github-actions[bot]"
          message: |
            Your PR is applying here: https://github.com/ministryofjustice/operations-engineering/actions/workflows/cicd-terraform-${{ inputs.workflow_name }}.yml?query=event%3Apush+branch%3Amain

      - name: Delete old comments on PR made by bot user
        if: github.ref != 'refs/heads/main'
        uses: izhangzhihao/delete-comment@d075704468e1cf74e60944d9f335351213c34d85 # master
        with:
          github_token: ${{ secrets.repo_github_token }}
          delete_user_name: github-actions[bot]
          issue_number: ${{ github.event.number }}
        continue-on-error: true

      - name: Terraform Format Check
        id: fmt-check
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: ls -latr; terraform init -input=false -no-color

      - name: Build Lambdas
        if: ${{ inputs.build_lambdas }}
        run: cd .terraform/modules/${{ inputs.lambda_module_name }} && ${{ inputs.build_lambdas_command }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color | make -f "$GITHUB_WORKSPACE/Makefile" redact-terraform-output

      - name: Post Plan to GitHub PR
        if: github.ref != 'refs/heads/main'
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          repo-token: ${{ secrets.repo_github_token }}
          repo-token-user-login: "github-actions[bot]"
          message: |
            ## Terraform ${{ inputs.name }} plan
            ```
            ${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}
            ```

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        id: apply
        run: terraform apply -input=false -no-color -auto-approve | make -f "$GITHUB_WORKSPACE/Makefile" redact-terraform-output

      - name: Report failure to Slack
        if: ${{ always() && github.ref == 'refs/heads/main' }}
        uses: ravsamhq/notify-slack-action@472601e839b758e36c455b5d3e5e1a217d4807bd # 2.5.0
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "Failed GitHub Action Run"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}
